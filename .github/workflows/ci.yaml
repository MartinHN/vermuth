name: CI Pipeline
on: [push]

jobs:

  build-all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: install
        run: ./install.sh
      - name: Build
        run: ./build.sh
      - name: Package linux
        run: cd server && PLATFORM_TARGET=linux DEPLOY_FOLDER=build_linux node pkg.js


      - uses: actions/upload-artifact@v1
        with:
          name: build_linux.zip
          path: ./server/build_linux/out.zip



  release:
    runs-on: ubuntu-latest
    needs: [build-all]
    steps:
     
      - uses: actions/download-artifact@v1
        with:
          name: build_linux.zip


      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v0.0
          release_name: Release v0.0
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: true

      - name: Upload Release Asset Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build_linux.zip
          asset_name: build_linux.zip
          asset_content_type: application/zip